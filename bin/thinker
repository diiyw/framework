#!/usr/bin/env php
<?php

// $argv[1] 连接名称
// $argv[2] 表名称
// $argv[3] 数据库配置文件

// 加载文件
require __DIR__ . "/../src/thinker/Registry.php";
require __DIR__ . '/../src/thinker/Model.php';

$config = include_once $argv[3];

// 创建应用
class App extends \thinker\Model
{
    public $name = "default";

    public function __construct()
    {
        $this->name = $argv[1];
        parent::__construct();
    }
}

// 创建模型
$app = new App();

$table = $argv[2];

$modelName = ucfirst($table) . "Model";

$result = $app->query("SHOW FULL COLUMNS FROM $table");

$colunms = $result->fetchAll();

$properties = "";

$model = [];

if (!empty($colunms)) {
    foreach ($colunms as $k => $colunm) {
        $comment = "
    /**
     * {$colunm["Comment"]}
     * @var {$colunm["Type"]}
     * @default {$colunm["Default"]}
     */\n";
        if ($colunm["Key"] == "PRI") {
            $primaryKey = $colunm["Field"];
        }
        $field = convertUnderline(lcfirst($colunm["Field"]));
        $properties .= $comment . "    public $" . $field . ";\n";
        $model[] = "            \"{$colunm["Field"]}\" => \$this->$field,";
    }
}
$model = join("\n", $model);
$modelTPL = <<<MODEL
<?php

namespace $table;

use thinker\Model;

class $modelName extends Model
{
    $properties
    public \$primaryKey = "$primaryKey";
    
    public function toArray()
    {
        return [
$model
        ];
    }
}

MODEL;

file_put_contents($modelName . ".php", $modelTPL);

// 下划线变量转驼峰命名
function convertUnderline($str)
{
    $str = preg_replace_callback('/([-_]+([a-z]{1}))/i', function ($matches) {
        return strtoupper($matches[2]);
    }, $str);
    return $str;
}
